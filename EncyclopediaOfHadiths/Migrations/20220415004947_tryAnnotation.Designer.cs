// <auto-generated />
using System;
using EncyclopediaOfHadiths.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EncyclopediaOfHadiths.Migrations
{
    [DbContext(typeof(EncyclopediaOfHadithsContext))]
    [Migration("20220415004947_tryAnnotation")]
    partial class tryAnnotation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.Chapter", b =>
                {
                    b.Property<long>("ChapterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ChapterId"), 1L, 1);

                    b.Property<string>("ChapterExplainText")
                        .HasColumnType("ntext");

                    b.Property<string>("ChapterTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ChapterVocabsExplain")
                        .HasColumnType("ntext");

                    b.Property<int>("PartId")
                        .HasColumnType("int");

                    b.HasKey("ChapterId");

                    b.HasIndex("PartId");

                    b.ToTable("Chapters");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.Collection", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("CollectionAuthor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .IsFixedLength();

                    b.Property<string>("CollectionTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.Hadith", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<byte?>("CollectionId")
                        .HasColumnType("tinyint");

                    b.Property<int?>("HadithNo")
                        .HasColumnType("int");

                    b.Property<string>("HadithText")
                        .HasColumnType("ntext");

                    b.Property<byte?>("HadithTypeId")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("ReviewTermId")
                        .HasColumnType("tinyint");

                    b.Property<string>("VocabsExplain")
                        .HasColumnType("ntext");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.HasIndex("HadithTypeId");

                    b.ToTable("Hadiths");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.HadithsChapter", b =>
                {
                    b.Property<long>("ChapterId")
                        .HasColumnType("bigint");

                    b.Property<long>("HadithId")
                        .HasColumnType("bigint");

                    b.HasIndex("ChapterId");

                    b.HasIndex("HadithId");

                    b.ToTable("HadithsChapters");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.HadithsReview", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("HadithId")
                        .HasColumnType("bigint");

                    b.Property<byte>("ReviewTermId")
                        .HasColumnType("tinyint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("HadithId");

                    b.HasIndex("ReviewTermId");

                    b.ToTable("HadithsReviews");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.HadithType", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("HadithType1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("HadithType")
                        .IsFixedLength();

                    b.Property<string>("HadithTypeNote")
                        .HasColumnType("ntext");

                    b.HasKey("Id");

                    b.ToTable("HadithTypes");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.Narrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("NarratorDied")
                        .HasColumnType("date");

                    b.Property<string>("NarratorInfo")
                        .HasColumnType("ntext");

                    b.Property<string>("NarratorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .IsFixedLength();

                    b.Property<string>("NarratorNote")
                        .HasColumnType("ntext");

                    b.Property<DateTime?>("NarratorWasBorned")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Narrators");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.NarratorLevel", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("NarratorLevels");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.NarratorsChain", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("HadithId")
                        .HasColumnType("bigint");

                    b.Property<int>("NarratorId")
                        .HasColumnType("int");

                    b.Property<byte>("NarratorLevel")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("HadithId");

                    b.HasIndex("NarratorId");

                    b.HasIndex("NarratorLevel");

                    b.ToTable("NarratorsChains");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.Part", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("PartTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.ReviewTerm", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("StatusTerm")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("ReviewTerms");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.Chapter", b =>
                {
                    b.HasOne("EncyclopediaOfHadiths.Models.Part", "Part")
                        .WithMany("Chapters")
                        .HasForeignKey("PartId")
                        .IsRequired();

                    b.Navigation("Part");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.Hadith", b =>
                {
                    b.HasOne("EncyclopediaOfHadiths.Models.Collection", "Collection")
                        .WithMany("Hadiths")
                        .HasForeignKey("CollectionId")
                        .HasConstraintName("FK_Hadiths_Collections");

                    b.HasOne("EncyclopediaOfHadiths.Models.HadithType", "HadithType")
                        .WithMany("Hadiths")
                        .HasForeignKey("HadithTypeId")
                        .HasConstraintName("FK_Hadiths_HadithTypes");

                    b.Navigation("Collection");

                    b.Navigation("HadithType");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.HadithsChapter", b =>
                {
                    b.HasOne("EncyclopediaOfHadiths.Models.Chapter", "Chapter")
                        .WithMany()
                        .HasForeignKey("ChapterId")
                        .IsRequired()
                        .HasConstraintName("FK_HadithsChapters_Chapters");

                    b.HasOne("EncyclopediaOfHadiths.Models.Hadith", "Hadith")
                        .WithMany()
                        .HasForeignKey("HadithId")
                        .IsRequired()
                        .HasConstraintName("FK_HadithsChapters_Hadiths");

                    b.Navigation("Chapter");

                    b.Navigation("Hadith");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.HadithsReview", b =>
                {
                    b.HasOne("EncyclopediaOfHadiths.Models.Hadith", "Hadith")
                        .WithMany("HadithsReviews")
                        .HasForeignKey("HadithId")
                        .IsRequired()
                        .HasConstraintName("FK_HadithsReviews_Hadiths");

                    b.HasOne("EncyclopediaOfHadiths.Models.ReviewTerm", "ReviewTerm")
                        .WithMany("HadithsReviews")
                        .HasForeignKey("ReviewTermId")
                        .IsRequired()
                        .HasConstraintName("FK_HadithsReviews_ReviewTerms");

                    b.Navigation("Hadith");

                    b.Navigation("ReviewTerm");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.NarratorsChain", b =>
                {
                    b.HasOne("EncyclopediaOfHadiths.Models.Hadith", "Hadith")
                        .WithMany("NarratorsChains")
                        .HasForeignKey("HadithId")
                        .IsRequired()
                        .HasConstraintName("FK_NarratorsChains_Hadiths");

                    b.HasOne("EncyclopediaOfHadiths.Models.Narrator", "Narrator")
                        .WithMany("NarratorsChains")
                        .HasForeignKey("NarratorId")
                        .IsRequired()
                        .HasConstraintName("FK_NarratorsChains_Narrators");

                    b.HasOne("EncyclopediaOfHadiths.Models.NarratorLevel", "NarratorLevelNavigation")
                        .WithMany("NarratorsChains")
                        .HasForeignKey("NarratorLevel")
                        .IsRequired()
                        .HasConstraintName("FK_NarratorsChains_NarratorLevels");

                    b.Navigation("Hadith");

                    b.Navigation("Narrator");

                    b.Navigation("NarratorLevelNavigation");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.Collection", b =>
                {
                    b.Navigation("Hadiths");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.Hadith", b =>
                {
                    b.Navigation("HadithsReviews");

                    b.Navigation("NarratorsChains");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.HadithType", b =>
                {
                    b.Navigation("Hadiths");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.Narrator", b =>
                {
                    b.Navigation("NarratorsChains");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.NarratorLevel", b =>
                {
                    b.Navigation("NarratorsChains");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.Part", b =>
                {
                    b.Navigation("Chapters");
                });

            modelBuilder.Entity("EncyclopediaOfHadiths.Models.ReviewTerm", b =>
                {
                    b.Navigation("HadithsReviews");
                });
#pragma warning restore 612, 618
        }
    }
}
